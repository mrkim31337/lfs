#!/bin/sh

#help output
if [ "$1" == "-h" ]
then
	echo "Script to update gnome and dependancies"
	echo "Usage:"
	echo -e "\t$0 [package]"
	echo -e "\tpackage: First package in list to get installed. This is to be able to continue where you left of before."
	exit 0
fi
[ -z $XORG_PREFIX ] && echo "xorg prefix not set - install xorg-build-environment first" && exit 1
[ -z $XORG_CONFIG ] && echo "xorg congig not set - install xorg-build-environment first" && exit 1
#load settings from ~/.lfs-me
[ -f ~/.lfs-me ] && source ~/.lfs-me


install=(
'Python3'
'dbus'
'libtirpc'
'krb5'
'vala'
'accountsservice'
'libassuan'
'libksba'
'npth'
'pinentry'
'gnupg'
'atk'
'at-spi2-core'
'at-spi2-atk'
'nasm'
'yasm'
'libjpeg-turbo'
'glu'
'freeglut'
'libtiff'
'jasper'
'gdk-pixbuf'
'cairo'
'nettle'
'pango'
'hicolor-icon-theme'
'lcms2'
'libusb'
'libgusb'
'libgudev'
'bash-completion'
'colord'
'xmlto'
'links'
'xdg-utils'
'cups'
'json-glib'
'libxkbcommon'
'gsettings-desktop-schemas'
'glib-networking'
'libsoup'
'rest'
'libcroco'
'librsvg'
'gtk+'
'gcr'
'libsecret'
'gpgme'
'gmime'
'totem-pl-parser'
'pcre2'
'vte'
'itstool'
'yelp-xsl'
'dbus-glib'
'gconf'
'geocode-glib'
'mozjs2'
'gjs'
'gnome-autoar'
'iso-codes'
'gnome-desktop'
'gnome-menus'
'telepathy-glib'
'gstreamer'
'alsa-lib'
'cdparanoia'
'libogg'
'sdl'
'libvorbis'
'libtheora'
'gst-plugins-base'
'gtk+2'
'ruby'
'aspell'
'enchant'
'libnotify'
'libdaemon'
'libglade'
'dbus-python'
'avahi'
'libndp'
'libnl'
'gpm'
'newt'
'iptables'
'upower'
'wpa_supplicant'
'libical'
'bluez'
'libmbim'
'libqmi'
'modemmanager'
'dhcpcd'
'pycairo'
'py2cairo'
'pygobject2'
'pygobject3'
'networkmanager'
'geoclue'
'giflib'
'libwebp'
'webkitgtk'
'gnome-online-accounts'
'gnome-video-effects'
'grilo'
'gtkhtml'
'cogl'
'clutter'
'clutter-gtk'
'libchamplain'
'liboauth'
'uhttpmock'
'libgdata'
'libgee'
'libgtop'
'libgweather'
'libpeas'
'startup-notification'
'libwnck'
'evolution-data-server'
'telepathy-logger'
'telepathy-mission-control'
'libxklavier'
'caribou'
'dconf'
'dconf-editor'
'gnome-backgrounds'
'libatasmart'
'gptfdisk'
'fuse'
'ntfs-3g'
'parted'
'udisks'
'libcddb'
'libcdio'
'Module-Build'
'File-Which'
'IPC-System-Simple'
'Parse-Yapp'
'cyrus-sasl'
'openldap'
'talloc'
'samba'
'gvfs'
'boost'
'exempi'
'libexif'
'nautilus'
'zenity'
'json-c'
'libsndfile'
'pulseaudio'
'libcanberra'
'gnome-bluetooth'
'gnome-keyring'
'libwacom'
'xf86-input-wacom'
'gnome-settings-daemon'
'libpwquality'
'shared-mime-info'
'colord-gtk'
'gcab'
'yaml'
'appstream-glib'
'exiv2'
'gnome-color-manager'
'ibus'
'polkit-gnome'
'network-manager-applet'
'libdvdread'
'libdvdnav'
'llvm'
'soundtouch'
'faac'
'faad2'
'fribidi'
'libass'
'libmpeg2'
'libvdpau'
'mpg123'
'neon'
'libmng'
'pciutils'
'qt'
'v4l-utils'
'fdk-aac'
'lame'
'opus'
'x264'
'x265'
'libva'
'sdl2'
'libvpx'
'ffmpeg'
'aalib'
'flac'
'imagemagick'
'liba52'
'libmad'
'speexdsp'
'speex'
'xine-lib'
'opencv'
'openjpeg'
'gst-plugins-bad'
'libdv'
'taglib'
'gst-plugins-good'
'clutter-gst'
'cheese'
'gnome-control-center'
'mutter'
'gdm'
'adwaita-icon-theme'
'gnome-themes-standard'
'gnome-shell'
'gnome-shell-extensions'
'gnome-session'
'desktop-file-utils'
'yelp'
'notification-daemon'
'gnome-terminal'
'sound-theme-freedesktop'
'dejavu-fonts-ttf'
'XML-SAX-Expat'
'XML-LibXML'
'Tie-IxHash'
'XML-Simple'
'icon-naming-utils'
'gnome-icon-theme'
'gnome-icon-theme-extras'
'gnome-icon-theme-symbolic'
)

mkdir -v pkg

[ -f build-X11.log ] && rm build-X11.log
touch build-X11.log

for package in "${install[@]}"
do
	if [ -z $1 ] || [ $1 == $package ]
	then
		shift "$#" #remove commandline parameters
		echo "BUILDING ${package}"
		lfs-me build "$package"  | tee -a build-updates.log
		[ ! ${PIPESTATUS[0]} -eq 0 ] && echo "Building '$package' failed!" && exit 1
		mv ${package}*.pkg  pkg/
		lfs-me install pkg/${package}*.pkg | tee -a build-updates.log
		[ ! ${PIPESTATUS[0]} -eq 0 ] && echo "Installing '$package' failed!" && exit 1
	fi
done
